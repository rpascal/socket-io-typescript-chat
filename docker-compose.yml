version: '2.1'

services:
  client:
    image: client 
    build: client
    restart: always
    links:
      - server
    ports:
      - "4200:80"
    depends_on:
      - server
  server:
    image: server
    build: server
    environment:
       PORT : 8080
    restart: always
    ports:
      - 8080:8080
    links:
      - dbpostgres
    depends_on:
      dbpostgres:
        condition: service_healthy
  dbpostgres:
    image: postgres:9.6
    ports:
      - 5432:5432
    # environment:
    #   - POSTGRES_USER=someuser
    #   - POSTGRES_PASSWORD=s0me-p4sswd
    #   - POSTGRES_DB=test-db
    #   - POSTGRES_PORT=5432
    volumes:
      - ./data/postgres:/var/lib/postgresql
      #- ./init.sql/startup.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./initdb.d:/docker-entrypoint-initdb.d
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5


#  environment:
#       - POSTGRES_USER=someuser
#       - POSTGRES_PASSWORD=s0me-p4sswd
#       - POSTGRES_DB=test-db
#       - POSTGRES_PORT=5432
#     volumes:
#       - ./data/postgres:/var/lib/postgresql/data
#       - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
#     restart: always


    # links:
    #   - cassandra
    # # depends_on:
    # #   - cassandra 
    # depends_on:
    #   cassandra:
    #     condition: service_healthy

  # cassandra:
  #   build: cassandra
  #   restart: always
  #   volumes:
  #     - ./data/cassandra:/var/lib/cassandra
  #     - ./cassandra/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
  #   healthcheck:
  #     test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

  # cassandra:
  #   image: cassandra:2.1.20
  #   restart: always
  #   volumes:
  #     - ./data/cassandra:/var/lib/cassandra
  #     - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
  #   healthcheck:
  #     test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5      


  # mongodb:
  #   image: raspberry-mongo
  #   build: raspberry-mongo

  # redis:
  #   image: redis
  #   volumes:
  #     - ./data:/data
  #   ports:
  #     - 6379
  # mongodb:
  #   image: 'mongoclient/mongoclient:2.2.0'
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - ./data/mongodb/db:/data/db
  # mongodb:
  #   image: 'bitnami/mongodb:latest'
  #   # ports:
  #   #   - "27017:27017"
  #   # volumes:
  #   #   - ./data/mongodb/db:/bitnami
  #   environment:
  #     - MONGODB_USERNAME=admin
  #     - MONGODB_PASSWORD=password
  #     - MONGODB_DATABASE=db
